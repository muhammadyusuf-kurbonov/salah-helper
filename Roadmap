1. Fetch salah times
2. Get times for next salahs
3. Check storage if current salah is done
    3.1 if salah is done - exit program
    3.2 else show prompt if it is done
    3.3 if prev salah was not done:
        3.3.1  Show SHAYM ON YOU msg
        3.3.2  Add to QAZA counter (separate for each salah)
4. Add command to let user say that qaza salah is done and decrease QAZA counter

Language is RUST

To implement the block-to-pray application in Rust, we need to handle several tasks such as fetching prayer times, checking if a specific prayer has been completed, and managing a counter for completed prayers. Below is a basic outline of how you might structure this application:
1. **Fetch Prayer Times**: Use an API or library to fetch the prayer times for the current day.
2. **Check Storage**: Determine if the current prayer has already been completed by checking storage (e.g., a file).
3. **Display Prompts and Counter**: If the prayer hasn't been completed, display prompts and update the counter.
4. **Handle Completion**: Allow users to mark prayers as done and decrease the counter.

Here's a simplified version of how you might implement this in Rust:
To implement the block-to-pray application in Rust, we need to handle several tasks such as fetching prayer times, checking if a specific prayer has been completed, and managing a counter for completed prayers. Below is a basic outline of how you might structure this application:
### Step 1: Fetch Prayer Times

You can use an API like the IslamicFinder API to fetch prayer times. First, add the necessary dependencies to your `Cargo.toml`:
